# Get region using ec2-metadata:
$ ec2-metadata -z | awk -F": " '{print $2}' | sed -e 's/.$//g'


# -------------------------------------- #
# Create lambda function
# -------------------------------------- #
# update variables: function_name account-id role-for-function target-region
# example assumes python2.7 and lambda_handler is used

aws lambda create-function --function-name <function_name> --role  arn:aws:iam::<account-id>:role/<role-for-function> --runtime python2.7 --handler <function-name>.lambda_handler --zip-file fileb://<function-name>.zip --region <target-region> --timeout <seconds>


# Search for ami using aws cli:
# 
# # Example: search for all ami-id that start with "Windows_Server-2016-English-Full-Base" phrase
# 
aws ec2 describe-images --owners amazon --region us-east-2 --filters "Name=name,Values=Windows_Server*" --query 'Images[?Name!=`null`]|[?starts_with(Name, `Windows_Server-2016-English-Full-Base`) == `true`]|[].[ImageId,Name,CreationDate]' --output text

# List Default VPC's for selected region:
aws ec2 describe-vpcs --filters Name=isDefault,Values=true --region=us-east-1 --query "Vpcs[].VpcId"

# Get private ip address from ELB:
aws ec2 describe-network-interfaces --filters "Name=description,Values=<elb-name>" --region us-east-2 --output json --query "NetworkInterfaces[].PrivateIpAddresses[].PrivateIpAddress"
# example: 
aws ec2 describe-network-interfaces --filters "Name=description,Values=ELB MyAwesome-ELB-TCP" --region us-east-2 --output json --query "NetworkInterfaces[].PrivateIpAddresses[].PrivateIpAddress"

# Disable MFA device
aws iam deactivate-mfa-device --user-name <username> --serial-number arn:aws:iam::<aws-account-nr>:mfa/<username>


# Check status of instances behind ELB:
ELB_NAME="<name>
REGION="us-west-2"

COUNT_OF_HEALTHY_INSTANCES=$(aws elb describe-instance-health --load-balancer-name ${ELB_NAME} --region ${REGION} --query 'InstanceStates[].{Status:State}' --output text | grep "InService" | wc -l)
HEALTHY_INSTANCES=$(aws elb describe-instance-health --load-balancer-name ${ELB_NAME} --region ${REGION} --query 'InstanceStates[].{Status:State, ID:InstanceId}' --output text)


# List users with MFA enabled:
aws iam list-virtual-mfa-devices --region us-west-2 --query 'VirtualMFADevices[].User[].{Name:UserName,Created:CreateDate,User_ARN:Arn}' | less
